version: v2beta1
name: operator-sdk-devspace

# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all       # 1. Deploy any projects this project needs (see "dependencies")
      create_deployments --all     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev app                # 4. Start dev mode "app" (see "dev" section)
  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      run_dependencies --all                            # 1. Deploy any projects this project needs (see "dependencies")
      build_images --all -t $(git describe --always)    # 3. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 4. Deploy Helm charts and manifests specfied as "deployments"


# This is a list of `deployments` that DevSpace can create for this project
deployments:
  app:
    # This deployment uses `kubectl` but you can also define `helm` deployments
    kubectl:
      manifests:
        - config/default/
      kustomize: true

# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  app:
    # Search for the container that runs this image
    labelSelector:
      control-plane: controller-manager
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    # Sync files between the local filesystem and the development container
    # Open a terminal and use the following command to start it
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: helm
      - command: git
    # Forward the following ports to be able access your application via localhost
    ports:
      - port: "2345"
    containers:
      manager:
        devImage: ghcr.io/loft-sh/devspace-containers/go:1.18-alpine
        terminal:
          command: ./devspace_start.sh
        ssh:
          enabled: true
        sync:
          - path: ./
    patches:
    - op: replace
      path: spec.containers[1].command
      value:
      - sleep
    - op: replace
      path: spec.containers[1].args
      value:
      - "9999999"
    - op: remove
      path: spec.containers[1].securityContext
    - op: remove
      path: spec.securityContext
    - op: remove
      path: spec.containers[1].resources.limits.cpu
    - op: replace
      path: spec.containers[1].resources.limits.memory
      value: "1Gi"
    - op: remove
      path: spec.containers[1].startupProbe
    - op: remove
      path: spec.containers[1].livenessProbe
    - op: remove
      path: spec.containers[1].readinessProbe

# Use the `commands` section to define repeatable dev workflows for this project 
commands:
  migrate-db:
    command: |-
      echo 'This is a cross-platform, shared command that can be used to codify any kind of dev task.'
      echo 'Anyone using this project can invoke it via "devspace run migrate-db"'

# Define dependencies to other projects with a devspace.yaml
# dependencies:
#   api:
#     git: https://...  # Git-based dependencies
#     tag: v1.0.0
#   ui:
#     path: ./ui        # Path-based dependencies (for monorepos)
